<?xml version="1.0" encoding="iso-8859-1" ?>

<AlgoNETExplorer>
    <StrategyCode StrategyName="Simple_Weekly" Language="C# .NET">
        <TickEventCode>//
// Copyright THJ Systems Ltd
//
//------- D E S C R I P T I O N -------
//

//------- P E R F O R M A N C E   P A R A M E T E R S -------
Backtest.Configuration.UseWeekly=true;
Backtest.Configuration.UseQuarterly=false;
Backtest.Configuration.MaxExpirationDTE=8;

//------- O P T I M I Z A T I O N   P A R A M E T E R S -------
int PARAM_NearMonth=5;
int PARAM_FarMonth=8;
int PARAM_WingWidth=30;
int PARAM_NumberOfContracts=1;
int PARAM_ProfitTarget=15;
int PARAM_MaxLoss=10;
int PARAM_ExitDTE=2;

//------- E N T R Y   R U L E S -------
if(Position.IsOpen==false) {

	//WriteLog(Backtest.TradingDateTime.DayOfWeek.ToString());
	//if (Backtest.TradingDateTime.DayOfWeek.ToString() !== &quot;Monday&quot;)
	
	//Find the month expiration cycle
    var monthExpiration=GetExpiryByDTE(PARAM_NearMonth, PARAM_FarMonth);
    if (monthExpiration == null) return;   // Haven&apos;t found an expiration matching our criteria

    //Create two new Model Positions and build an ATM Butterfly using the expiration cycles we found above.
    //One position using Calls, the other using Puts, so we can compare which is better.
    var modelPositionCall=NewModelPosition();
    modelPositionCall.AddButterfly(ATM, PARAM_WingWidth, Buy, Call, PARAM_NumberOfContracts, monthExpiration);
    var modelPositionPut=NewModelPosition();
    modelPositionPut.AddButterfly(ATM, PARAM_WingWidth, Buy, Put, PARAM_NumberOfContracts,  monthExpiration);
    var modelPosition=NewModelPosition();
    //Look for the Butterfly with the smallest cost and store it
    if (modelPositionCall.Cost &lt; modelPositionPut.Cost)
         modelPosition.AddButterfly(ATM, PARAM_WingWidth, Buy, Call, PARAM_NumberOfContracts, monthExpiration);
    else
         modelPosition.AddButterfly(ATM, PARAM_WingWidth, Buy, Put, PARAM_NumberOfContracts, monthExpiration);

    //Commit the Model Position to the Trade Log and add a comment
    modelPosition.CommitTrade(&quot;Buy ATM Butterfly&quot;);

}

//------- A D J U S T M E N T   R U L E S -------
//  NONE

//------- E X I T   R U L E S -------
if(Position.IsOpen==true) {

    //Check Profit Target
    if(Position.PnLPercentage &gt;= PARAM_ProfitTarget) Position.Close(&quot;Hit Profit Target&quot;);

    //Check Max Loss
    if(Position.PnLPercentage &lt;= -PARAM_MaxLoss) Position.Close(&quot;Hit Max Loss&quot;);

    //Check Minimum DTE
    if(Position.DTE &lt;= PARAM_ExitDTE) Position.Close(&quot;Hit Minimum DTE&quot;);

    //Check Max Adjustments
    if(Position.Adjustments &gt;= 5) Position.Close(&quot;Hit Max Adjustments&quot;);

}
        </TickEventCode>
    </StrategyCode>
</AlgoNETExplorer>
