<?xml version="1.0" encoding="iso-8859-1" ?>

<AlgoNETExplorer>
    <StrategyCode StrategyName="Short put naked" Language="C# .NET">
        <TickEventCode>//
// Copyright THJ Systems Ltd
//
//------- D E S C R I P T I O N -------
//

//------- P E R F O R M A N C E   P A R A M E T E R S -------
Backtest.Configuration.UseWeekly=false;
Backtest.Configuration.UseQuarterly=false;
Backtest.Configuration.MaxExpirationDTE=70;

//------- O P T I M I Z A T I O N   P A R A M E T E R S -------
int PARAM_NearMonth=60;
int PARAM_FarMonth=70;
int PARAM_ShortDelta=5;
int PARAM_NumberOfContracts=10;
int PARAM_ProfitTarget=3;
int PARAM_MaxLoss=10;
int PARAM_ExitDTE=36;

//------- E N T R Y   R U L E S -------
if(Position.IsOpen==false) {


  // even though it is cheating, don&apos;t initiate any trades on 8/21/15 and 8/24/15
  // because pricing data on 8/24 is a mess and it really throw off the backtest

  if (Backtest.TradingDateTime.Date.ToString() == &quot;8/24/2015 12:00:00 AM&quot;) {
   WriteLog(&quot;Backtest.TradingDateTime.Date: &quot; + Backtest.TradingDateTime.Date.Date);
   return;
  }
  if (Backtest.TradingDateTime.Date.ToString() == &quot;8/21/2015 12:00:00 AM&quot;) {
   WriteLog(&quot;Backtest.TradingDateTime.Date: &quot; + Backtest.TradingDateTime.Date.Date);
   return;
  }


  //there&apos;s something wrong with the backtest data on 8/1/2011 - 8/3/2011, don&apos;t initiate anything on those days
  if (Backtest.TradingDateTime.Date.ToString() == &quot;8/1/2011 12:00:00 AM&quot;) {
   return;
  }
  if (Backtest.TradingDateTime.Date.ToString() == &quot;8/2/2011 12:00:00 AM&quot;) {
   return;
  }
  if (Backtest.TradingDateTime.Date.ToString() == &quot;8/3/2011 12:00:00 AM&quot;) {
   return;
  }
  //same for 9/13/2013
  if (Backtest.TradingDateTime.Date.ToString() == &quot;9/13/2013 12:00:00 AM&quot;) {
   return;
  }
  //same for 9/16/2013
  if (Backtest.TradingDateTime.Date.ToString() == &quot;9/16/2013 12:00:00 AM&quot;) {
   return;
  }	
	
	
    //Find the month expiration cycle
    var monthExpiration=GetExpiryByDTE(PARAM_NearMonth, PARAM_FarMonth);
    if (monthExpiration == null) return;   // Haven&apos;t found an expiration matching our criteria
    //Create a new Model Position and build a Vertical using the expiration cycles we found above.
    var modelPosition=NewModelPosition();
    var shortLeg=CreateModelLeg(SELL, PARAM_NumberOfContracts, GetOptionByDelta(Put, -PARAM_ShortDelta,monthExpiration), &quot;ShortLeg-&quot; + Position.Adjustments);
    modelPosition.AddLeg(shortLeg);
    //Commit the Model Position to the Trade Log and add a comment
    modelPosition.CommitTrade(&quot;Sell Put&quot;);
}

//------- A D J U S T M E N T   R U L E S -------
//  NONE

//------- E X I T   R U L E S -------
if(Position.IsOpen==true) {

    //Check Profit Target
    if(Position.PnLPercentage &gt;= PARAM_ProfitTarget) Position.Close(&quot;Hit Profit Target&quot;);

    //Check Max Loss
    if(Position.PnLPercentage &lt;= -PARAM_MaxLoss) Position.Close(&quot;Hit Max Loss&quot;);

    //Check Minimum DTE
    if(Position.DTE &lt;= PARAM_ExitDTE) Position.Close(&quot;Hit Minimum DTE&quot;);
	
	 //this is an ugly workaround for some data problem on 8-2-11 and 8-3-11 that causes my adjustment/exti rules to not be applied
    //we&apos;re just closing the trade before the data problems begin 
    if (Backtest.TradingDateTime.Date.ToString() == &quot;8/1/2011 12:00:00 AM&quot;) {
	 WriteLog(&quot;Closing due to rule for 8/1/2011&quot;);
	 Position.Close(&quot;Failed to lookup adjustment options - WORKAROUND for 8/1/2011, just exit&quot;);
    }
    // same for 9-16-2013
	 WriteLog(Backtest.TradingDateTime.Date.ToString());
    if (Backtest.TradingDateTime.Date == new DateTime(2013,9,13)) {
	 WriteLog(&quot;Closing due to rule for 9/13/2013&quot;);
	 Position.Close(&quot;Failed to lookup adjustment options - WORKAROUND for 9/13/2013, just exit&quot;);
    }
	 // same for 8/21/2015
	 WriteLog(Backtest.TradingDateTime.Date.ToString());
    if (Backtest.TradingDateTime.Date == new DateTime(2015,8,21)) {
	 WriteLog(&quot;Closing due to rule for 8/21/2015&quot;);
	 Position.Close(&quot;Failed to lookup adjustment options - WORKAROUND for 8/21/2015, just exit&quot;);
    }

}
        </TickEventCode>
    </StrategyCode>
</AlgoNETExplorer>
